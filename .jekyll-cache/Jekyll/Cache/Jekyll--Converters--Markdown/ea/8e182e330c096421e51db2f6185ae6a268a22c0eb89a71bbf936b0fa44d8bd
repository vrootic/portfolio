I"Ö<p>This should be the first post that listing how I set up GitHub Pages in 2017.</p>

<p>There are a lot of tutorials out there and I just want to contribute one today. There is a <a href="https://www.staticgen.com">StaticGen</a> that tells you which static site generator is the most used.</p>

<p>In 2015, I have tried <a href="http://gohugo.io/">Hugo</a> in the first place. It was really nice, and there are a lot of blogs that tell you why they changed from Jekyll to Hugo or other static site generator. Iâ€™m not here to tell you which one is better, I just want to tell you how I set up Jekyll. If you tried to deploy on GitHub, I think Jekyll is still a good static site generator to use.</p>

<h3 id="prerequisite">Prerequisite</h3>

<ul>
  <li>Ruby (because you need to use gem install)</li>
  <li>Git (just basic knowledge)</li>
  <li>GitHub account (you need an account before you can deploy blog on it)</li>
</ul>

<h3 id="install">Install</h3>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>~$ gem install jekyll
</code></pre></div></div>

<p>Next, you can use Jekyll to initiate a project</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>~$ jekyll new my-new-site
~$ cd my-new-site
~/my-new-site$ jekyll serve
</code></pre></div></div>

<p>Then, open your browser and go to <a href="http://127.0.0.1:4000">http://127.0.0.1:4000</a> and you can see your default theme serving on local.</p>

<h3 id="deploy-to-github">Deploy to GitHub</h3>

<p>Remember we already have our GitHub account. If you donâ€™t have this, go to GitHub and sign up for one.</p>

<p>At this point, you can decide what kind of url does your website have?</p>

<ul>
  <li>Use GitHub default url <strong>https://username.github.io</strong></li>
  <li>Apply custom domain <strong>https://example.com</strong></li>
</ul>

<h4 id="use-github-default-url">Use GitHub default url</h4>

<p>Before proceeding, you have to make sure you have created a repository named <strong><i>username.github.io</i></strong> where username is your username (or organization name) on GitHub.</p>

<p>For more details, you can look <a href="https://pages.github.com">here</a>.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>~/my-new-site$ git init .
~/my-new-site$ git add .
~/my-new-site$ git commit -m 'init git'

git remote add origin https://github.com/username/username.github.io.git
git push -u origin master
</code></pre></div></div>

<p>After you push repo to GitHub, it will automatically build the website on <strong>master</strong> branch.</p>

<h4 id="apply-custom-domain">Apply custom domain</h4>

<p>In this case, you have to set your branch to <strong>gh-pages</strong> and add a CNAME file in this repository, which contains the domain you bought from <a href="https://godaddy.com">GoDaddy</a> or other provider.</p>

<ul>
  <li>Take GoDaddy for example, please specify A to <strong>192.30.252.153</strong> and <strong>192.30.252.154</strong> and CNAME to <strong>username.github.io</strong>. 
Just like the following picture.
<img src="https://vicyang.com/assets/images/2017-07-21-how-did-i-set-up-github-pages-in-2017/1.png" /></li>
</ul>
<figcaption class="caption">Godaddy DNS settings</figcaption>
<p><br /></p>

<ul>
  <li>
    <p>Back to local, we can start pushing repository to GitHub.</p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  ~/my-new-site$ git init .
  ~/my-new-site$ git checkout -b gh-pages
  ~/my-new-site$ git add .
  ~/my-new-site$ git commit -m 'init git'

  git remote add origin https://github.com/username/username.github.io.git
  git push -u origin gh-pages
</code></pre></div>    </div>
  </li>
  <li>
    <p>Go to GitHub repository settings page to check GitHub Pages Settings:
<img src="https://vicyang.com/assets/images/2017-07-21-how-did-i-set-up-github-pages-in-2017/2.png" /></p>
  </li>
</ul>
<figcaption class="caption">GitHub Repository Settings Tab</figcaption>
<p><br /></p>

<ul>
  <li>Please make sure <strong>source</strong> points to <strong>gh-pages</strong> branch and <strong>custom domain</strong> points to the domain you bought.
<img src="https://vicyang.com/assets/images/2017-07-21-how-did-i-set-up-github-pages-in-2017/3.png" /></li>
</ul>
<figcaption class="caption">GitHub Pages Settings Area</figcaption>
<p><br /></p>

<ul>
  <li>Then you can go to your domain and see the result.</li>
</ul>

<h3 id="reference">Reference</h3>

<p>[1] <a href="https://pages.github.com">GitHub Pages</a></p>

<p>[2] <a href="http://seans.tw/2016/make-own-blog-with-jekyll-and-github-page/">åˆ©ç”¨Jekyllèˆ‡Github Pageå»ºç«‹è‡ªå·±çš„Dev-Blog</a></p>

<p>[3] <a href="http://lywdev.space/2016/08/30/create-website-with-github-and-jekyll/">Github Pages + Jekyll å¿«é€Ÿæž¶ç«™</a></p>

<p>[4] <a href="http://www.stephaniehicks.com/githubPages_tutorial/pages/githubpages-jekyll.html">Setting up GitHub Pages with Jekyll</a></p>

<p>[5] <a href="https://rhadow.github.io/2015/02/18/Jekyll-x-Github-x-Blog-Part1/">Jekyll x Github x Blog ç³»åˆ—</a></p>

<p>[6] <a href="http://chaosmail.github.io/programming/2014/07/16/extending-layouts-in-jekyll/">Extending Layouts in Jekyll</a></p>
:ET